name: last nest deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: set up node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install # 의존성 설치
        run: npm install

      - name: build nestjs
        run: npm run build
      
      - name: build output
        run: |
          ls -la dist
          pwd
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with: 
          name: build-artifacts
          path: dist/

      - name: install ssh key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SECRET_KEY }}" > ~/.ssh/aws_key
          chmod 600 ~/.ssh/aws_key
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts

      - name: ec2 deploy
        uses: appleboy/ssh-action@v1.0.3
        with: 
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AWS_SECRET_KEY }}
          port: ${{ secrets.PORT }}
          script: | 
            cd /home/ubuntu
            rm -rf dist
            mkdir dist
            rm -rf package.json
            touch package.json

      - name: Copy artifacts to EC2
        run: |
          ls
          pwd
          scp -r -i ~/.ssh/aws_key ./dist/* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/ubuntu/dist/
          scp -i ~/.ssh/aws_key package.json ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/ubuntu/

      - name: deploy to ec2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.AWS_SECRET_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/ubuntu
            npm install
            pm2 reload system.config.js --env production
